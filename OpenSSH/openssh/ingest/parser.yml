name: openssh
pipeline:
  - name: event
    external:
      name: grok.match
      properties:
        pattern: >-
          %{SSHD_HEADER}%{SPACE}(%{SSHD_INFO}|%{SSHD_ERROR})
        custom_patterns:
          SSHD_HEADER: (%{MONTH:month} %{MONTHDAY:month_day} %{TIME:time} %{HOSTNAME:hostname} sshd\[%{INT}\]:)?
          SSHD_TEXT: ((%{WORD}|,)%{SPACE})*
          SSHD_TWO_WORDS: "%{WORD}%{SPACE}%{WORD}"
          SSHD_MESSAGE_ACCEPTED: Accepted
          SSHD_MESSAGE_CONNECTION_CLOSED: Connection closed by
          SSHD_MESSAGE_DISCONNECTED: Disconnected from
          SSHD_MESSAGE_RECEIVED_DISCONNECT: Received disconnect from
          SSHD_MESSAGE_CONNECTION_RESET: Connection reset by
          SSHD_MESSAGE_PAM_SESSION_CLOSED: 'pam_unix\(sshd:session\): session closed for user'
          SSHD_MESSAGE_PAM_SESSION_OPENED: 'pam_unix\(sshd:session\): session opened for user'
          SSHD_MESSAGE_BAD_PROTOCOL: Bad protocol version
          SSHD_MESSAGE_IDENTIFICATION_NOT_RECEIVED: Did not receive identification string
          SSHD_MESSAGE_DISCONNECTING_USER: Disconnecting
          SSHD_MESSAGE_ERROR_USER: "error:"
          SSHD_MESSAGE_ERROR_NEGOCIATE: Unable to negotiate with
          SSHD_MESSAGE_ERROR_AUTH_REQUEST: "input_userauth_request:"
          SSHD_MESSAGE_PAM_CHECK_PASS: 'pam_unix\(sshd:auth\): check pass;'
          SSHD_MESSAGE_PAM_AUTH_FAILURE: 'pam_unix\(sshd:auth\): authentication failure;'
          SSHD_MESSAGE_PAM_EXPIRED_PASSWORD: 'pam_unix\(sshd:account\): expired password'
          SSHD_MESSAGE_FAILED_PASSWORD: Failed password
          SSHD_MESSAGE_INVALID_USER2: Invalid
          SSHD_MESSAGE_USER2: User
          SSHD_MESSAGE_INVALID_USER: invalid user
          SSHD_MESSAGE_ILLEGAL_USER: illegal user
          SSHD_MESSAGE_AUTHENTICATING_USER: authenticating user
          SSHD_MESSAGE_NORMAL_USER: user
          SSHD_MESSAGE_USER_QUALITY: "%{SSHD_MESSAGE_AUTHENTICATING_USER}|%{SSHD_MESSAGE_ILLEGAL_USER}|%{SSHD_MESSAGE_INVALID_USER}|(%{SSHD_MESSAGE_NORMAL_USER})?"
          SSHD_MESSAGE_USER: "%{SSHD_MESSAGE_USER_QUALITY:userquality} %{USERNAME:user_name}"
          SSHD_CLIENT_ADDRESS: "%{IP:source_ip}|%{HOSTNAME:source_domain}"
          SSHD_INFO_ACCEPTED:
            "%{SSHD_MESSAGE_ACCEPTED:sshd_message} %{NOTSPACE:outcome_reason}
            for %{USERNAME:user_name} from %{SSHD_CLIENT_ADDRESS} port %{NUMBER:source_port}(
            ssh2: %{NOTSPACE} SHA256:%{NOTSPACE:file_hash_sha256}|%{GREEDYDATA})"
          SSHD_INFO_CONNECTION_CLOSED:
            '%{SSHD_MESSAGE_CONNECTION_CLOSED:sshd_message}(%{SPACE}%{SSHD_MESSAGE_USER})?
            %{SSHD_CLIENT_ADDRESS} port %{NUMBER:source_port}( \[preauth\])?'
          SSHD_INFO_DISCONNECTED:
            '%{SSHD_MESSAGE_DISCONNECTED:sshd_message}(%{SPACE}%{SSHD_MESSAGE_USER})?
            %{SSHD_CLIENT_ADDRESS} port %{NUMBER:source_port}( \[preauth\])?'
          SSHD_INFO_RECEIVED_DISCONNECT:
            '%{SSHD_MESSAGE_RECEIVED_DISCONNECT:sshd_message} %{SSHD_CLIENT_ADDRESS}
            port %{NUMBER:source_port}:%{INT}:%{SPACE}%{SSHD_TEXT:outcome_reason}( \[preauth\])?'
          SSHD_INFO_CONNECTION_RESET:
            '%{SSHD_MESSAGE_CONNECTION_RESET:sshd_message}( %{SSHD_MESSAGE_USER})?
            %{SSHD_CLIENT_ADDRESS} port %{NUMBER:source_port}( \[preauth\])?'
          SSHD_INFO_DISCONNECTION: "%{SSHD_INFO_CONNECTION_CLOSED}|%{SSHD_INFO_DISCONNECTED}|%{SSHD_INFO_RECEIVED_DISCONNECT}|%{SSHD_INFO_CONNECTION_RESET}"
          SSHD_INFO_PAM_SESSION_CLOSED: "%{SSHD_MESSAGE_PAM_SESSION_CLOSED:sshd_message} %{WORD:user_name}"
          SSHD_INFO_PAM_SESSION_OPENED:
            '%{SSHD_MESSAGE_PAM_SESSION_OPENED:sshd_message} %{WORD:user_name}
            by \(%{GREEDYDATA}\)'
          SSHD_INFO_PAM_MORE_AUTH_FAIL:
            (%{SSHD_INFO_PAM_MORE_AUTH_FAIL_MESSAGE:sshd_message}); (logname=(%{USERNAME:user_logname})?
            )?(uid=(%{INT:user_id})? )?(euid=(%{INT:user_euid})?)?%{SPACE}(tty=ssh )?(ruser=(%{USERNAME:user_ruser})?)?%{SPACE}(rhost=(%{IP:source_ip})?)?%{SPACE}(user=%{USERNAME:user_name})?
          SSHD_INFO_PAM_MORE_AUTH_FAIL_MESSAGE: "PAM %{INT} more authentication failure(s)?"
          SSHD_INFO_PAM: "%{SSHD_INFO_PAM_SESSION_CLOSED}|%{SSHD_INFO_PAM_SESSION_OPENED}|%{SSHD_INFO_PAM_MORE_AUTH_FAIL}"
          SSHD_INFO: "%{SSHD_INFO_ACCEPTED}|%{SSHD_INFO_DISCONNECTION}|%{SSHD_INFO_PAM}|%{SSHD_EXPIRED_PASSSOWRD}"
          SSHD_ERROR_BAD_PROTOCOL:
            "%{SSHD_MESSAGE_BAD_PROTOCOL:sshd_message} identification
            '%{GREEDYDATA}' from %{SSHD_CLIENT_ADDRESS} port %{NUMBER:source_port}"
          SSHD_ERROR_IDENTIFICATION_NOT_RECEIVED:
            "%{SSHD_MESSAGE_IDENTIFICATION_NOT_RECEIVED:sshd_message}
            from %{SSHD_CLIENT_ADDRESS} port %{NUMBER:source_port}"
          SSHD_ERROR_IDENTIFICATION: "%{SSHD_ERROR_BAD_PROTOCOL}|%{SSHD_ERROR_IDENTIFICATION_NOT_RECEIVED}"
          SSHD_ERROR_INVALID_USER:
            (%{SSHD_MESSAGE_FAILED_PASSWORD:sshd_message} for|%{SSHD_MESSAGE_INVALID_USER2:sshd_message})%{SPACE}%{SSHD_MESSAGE_USER}%{SPACE}from
            %{SSHD_CLIENT_ADDRESS}( port %{NUMBER:source_port})?(%{SPACE}ssh2)?
          SSHD_ERROR_DISCONNECTING_USER:
            '%{SSHD_MESSAGE_DISCONNECTING_USER:sshd_message} %{SSHD_MESSAGE_USER}
            %{SSHD_CLIENT_ADDRESS} port %{NUMBER:source_port}:%{SPACE}(%{GREEDYDATA:outcome_reason})?
            (\[preauth\])?'
          SSHD_ERROR_FOR_USER:
            "%{SSHD_MESSAGE_ERROR_USER:sshd_message} %{GREEDYDATA:outcome_reason}
            for %{SSHD_MESSAGE_USER} from %{SSHD_CLIENT_ADDRESS} port %{NUMBER:source_port}%{GREEDYDATA}"
          SSHD_ERROR_KEX_EXCHANGE_IDENTIFICATION:
            "%{SSHD_MESSAGE_ERROR_USER:sshd_message} kex_exchange_identification:
            %{GREEDYDATA:outcome_reason}"
          SSHD_ERROR_USER_NOT_ALLOWED:
            "%{SSHD_MESSAGE_USER2:sshd_message} %{USERNAME:user_name}
            from %{SSHD_CLIENT_ADDRESS} %{GREEDYDATA:outcome_reason}"
          SSHD_ERROR_AUTH_REQUEST:
            '%{SSHD_MESSAGE_ERROR_AUTH_REQUEST:sshd_message} %{SSHD_MESSAGE_USER}(
            \[preauth\])?'
          SSHD_ERROR_NEGOCIATE:
            "%{SSHD_MESSAGE_ERROR_NEGOCIATE:sshd_message} %{SSHD_CLIENT_ADDRESS}
            port %{NUMBER:source_port}(: %{GREEDYDATA:outcome_reason})?"
          SSHD_ERROR_PAM_CHECK_PASS: "%{SSHD_MESSAGE_PAM_CHECK_PASS:sshd_message} %{SSHD_MESSAGE_USER}"
          SSHD_ERROR_PAM_AUTH_FAILURE: "%{SSHD_MESSAGE_PAM_AUTH_FAILURE:sshd_message} %{GREEDYDATA:pam}"
          SSHD_ERROR_PAM: "%{SSHD_ERROR_PAM_CHECK_PASS}|%{SSHD_ERROR_PAM_AUTH_FAILURE}"
          SSHD_EXPIRED_PASSSOWRD:
            '%{SSHD_MESSAGE_PAM_EXPIRED_PASSWORD:sshd_message} for user
            %{USERNAME:user_name} \(%{SSHD_TWO_WORDS:action_outcome_reason}\)'
          SSHD_ERROR: "%{SSHD_ERROR_IDENTIFICATION}|%{SSHD_ERROR_INVALID_USER}|%{SSHD_ERROR_NEGOCIATE}|%{SSHD_ERROR_DISCONNECTING_USER}|%{SSHD_ERROR_FOR_USER}|%{SSHD_ERROR_AUTH_REQUEST}|%{SSHD_ERROR_PAM}|%{SSHD_ERROR_USER_NOT_ALLOWED}|%{SSHD_ERROR_KEX_EXCHANGE_IDENTIFICATION}"

  - name: parse_kv
    filter: "{{event.message != None and event.message.pam != None}}"
    external:
      name: kv.parse-kv
      properties:
        input_field: "{{event.message.pam}}"
        output_field: message
        value_sep: "="
        item_sep: '\s'

  - name: set_ecs_fields

stages:
  set_ecs_fields:
    actions:
      - set:
          event.kind: "event"
          observer.product: "openssh"
          observer.vendor: "openbsd project"
          observer.type: "server"
          process.name: "sshd"
          action.outcome_reason: "{{ event.message.SSHD_INFO or event.message.SSHD_ERROR }}"
          event.outcome: "success" # legacy

      - set:
          source.domain: "{{event.message.source_domain}}"
          source.ip: "{{event.message.source_ip}}"
          source.port: "{{event.message.source_port}}"

          user.id: "{{event.message.user_id}}"
          user.euid: "{{event.message.user_id}}"
          user.name: "{{event.message.user_name}}"
          source.user.name: "{{event.message.user_name}}"

          file.hash.sha256: "{{event.message.file_hash_sha256}}"

      - set:
          user.id: "{{parse_kv.message.ruser}}"
          source.ip: "{{parse_kv.message.rhost}}"
        filter: "{{parse_kv.message != None}}"

      - set:
          event.category: ["authentication"]
          event.type: ["start"]
          action.type: "open"
          action.name: "session"
          action.outcome: "success"
          action.target: "user"

          openssh.auth.method: "{{ event.message.outcome_reason }}"

        filter: "{{event.message.sshd_message == 'Accepted'}}"

      - set:
          event.category: ["network"]
          event.type: ["end"]

          action.type: "close"
          action.name: "connection"
          action.outcome: "success"
          action.target: "user"
        filter: "{{event.message.sshd_message == 'Connection closed by'}}"

      - set:
          event.category: ["network"]
          event.type: ["end"]

          action.type: "close"
          action.name: "connection"
          action.outcome: "success"
          action.target: "user"
        filter: "{{event.message.sshd_message == 'Disconnected from'}}"

      - set:
          event.category: ["network"]
          event.type: ["end"]

          action.type: "close"
          action.name: "connection"
          action.outcome: "success"
          action.target: "user"
          action.outcome_reason: "{{event.message.outcome_reason}}"
        filter: "{{event.message.sshd_message == 'Received disconnect from'}}"

      - set:
          event.category: ["network"]
          event.type: ["end"]

          action.type: "close"
          action.name: "connection"
          action.outcome: "success"
          action.target: "user"
          action.outcome_reason: "reset"
        filter: "{{event.message.sshd_message == 'Connection reset by'}}"

      - set:
          event.category: ["session"]
          event.type: ["end"]

          action.type: "close"
          action.name: "sshd:session"
          action.outcome: "success"
          action.target: "user"

        filter: "{{event.message.sshd_message == 'pam_unix(sshd:session): session closed for user'}}"

      - set:
          event.category: ["session"]
          event.type: ["start"]

          action.type: "open"
          action.name: "sshd:session"
          action.outcome: "success"
          action.target: "user"

        filter: "{{event.message.sshd_message == 'pam_unix(sshd:session): session opened for user'}}"

      - set:
          event.category: ["network"]
          event.type: ["protocol"]

          action.outcome_reason: "{{ event.message.sshd_message }}"
          action.type: "open"
          action.name: "negotiate"
          action.outcome: "failure"
          action.target: "user"
        filter: "{{event.message.sshd_message == 'Bad protocol version'}}"

      - set:
          event.category: ["session"]
          event.type: ["end"]

          action.outcome_reason: "{{ event.message.sshd_message }}"
          action.type: "open"
          action.name: "connection"
          action.outcome: "failure"
          action.target: "user"
        filter: "{{event.message.sshd_message == 'Did not receive identification string'}}"

      - set:
          event.category: ["authentication"]
          event.type: ["end"]

          action.outcome_reason: "{{ event.message.sshd_message }}"
          action.type: "open"
          action.name: "connection"
          action.outcome: "failure"
          action.target: "user"
        filter: "{{event.message.sshd_message == 'Disconnecting'}}"

      - set:
          event.category: ["session"]
          event.type: ["end"]

          action.outcome_reason: "{{ event.message.outcome_reason }}"
          action.type: "open"
          action.name: "connection"
          action.outcome: "failure"
          action.target: "user"
        filter: "{{event.message.sshd_message == 'error:'}}"

      - set:
          event.category: ["session"]
          event.type: ["end"]

          action.type: "open"
          action.name: "negotiate"
          action.outcome: "failure"
          action.target: "user"
        filter: "{{event.message.sshd_message == 'Unable to negotiate with'}}"

      - set:
          event.category: ["authentication"]
          event.type: ["end"]

          action.outcome_reason: "{{ event.message.userquality }}"
          action.type: "open"
          action.name: "connection"
          action.outcome: "failure"
          action.target: "user"
        filter: "{{event.message.sshd_message == 'input_userauth_request:'}}"

      - set:
          event.category: ["authentication"]
          event.type: ["start"]

          action.type: "check"
          action.name: "sshd:auth"
          action.outcome: "success"
          action.target: "user"

        filter: "{{event.message.sshd_message == 'pam_unix(sshd:auth): check pass;'}}"

      - set:
          event.category: ["authentication"]
          event.type: ["end"]

          action.outcome_reason: "{{ event.message.sshd_message }}"
          action.type: "authentication"
          action.name: "sshd:auth"
          action.outcome: "failure"
          action.target: "user"

        filter: "{{event.message.sshd_message == 'pam_unix(sshd:auth): authentication failure;'}}"

      - set:
          action.type: "account"
          action.name: "expired password"

        filter: "{{event.message.sshd_message == 'pam_unix(sshd:account): expired password'}}"

      - set:
          event.category: ["authentication"]
          event.type: ["end"]

          action.outcome_reason: "{{ event.message.sshd_message }}"
          action.type: "open"
          action.name: "connection"
          action.outcome: "failure"
          action.target: "user"
        filter: "{{event.message.sshd_message == 'Failed password'}}"

      - set:
          event.category: ["authentication"]
          event.type: ["end"]

          action.outcome_reason: "{{ parse_event.message.sshd_message }} {{ parse_event.message.userquality }}"
          action.type: "open"
          action.name: "connection"
          action.outcome: "failure"
          action.target: "user"
        filter: "{{event.message.sshd_message == 'Invalid'}}"

      - set:
          event.category: ["authentication"]
          event.type: ["end"]

          action.outcome_reason: "{{ event.message.outcome_reason }}"
          action.type: "open"
          action.name: "connection"
          action.outcome: "failure"
          action.target: "user"
        filter: "{{event.message.sshd_message == 'User'}}"

      - set:
          event.category: ["authentication"]
          event.type: ["end"]

          action.outcome_reason: "{{ event.message.outcome_reason }}"
          action.type: "authentication"
          action.name: "sshd:auth"
          action.outcome: "failure"
          action.target: "user"

        filter: "{{event.message.sshd_message.endswith('more authentication failures')}}"
