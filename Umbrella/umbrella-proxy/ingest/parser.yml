name: umbrella-proxy
pipeline:
  - name: parsed_event
    external:
      name: dsv.parse-dsv
      properties:
        input_field: original.message
        output_field: message
        columnnames:
          - datetime
          - log_hostname
          - source_nat_ip
          - source_ip
          - destination_ip
          - mime_type
          - outcome_reason
          - data
          - http_request_referrer
          - user_agent_original
          - http_response_status_code
          - http_request_bytes
          - http_response_bytes
          - http_response_body_bytes
          - GREEDYDATA
        delimiter: ","
  - name: set_ecs_fields

stages:
  set_ecs_fields:
    actions:
      - set:
          action.name: "request"
          action.target: "network-traffic"
          action.outcome: "success"
          action.outcome_reason: "{{parsed_event.message.outcome_reason.split('.')[0] | lower}}"
          destination.ip: "{{parsed_event.message.destination_ip}}"
          host.hostname: "{{parsed_event.message.log_hostname}}"
          host.name: "{{parsed_event.message.log_hostname}}"
          http.request.bytes: "{{parsed_event.message.http_request_bytes}}"
          http.request.referrer: "{{parsed_event.message.http_request_referrer}}"
          http.response.body.bytes: "{{parsed_event.message.http_response_body_bytes}}"
          http.response.bytes: "{{parsed_event.message.http_response_bytes}}"
          http.response.status_code: "{{parsed_event.message.http_response_status_code}}"
          log.hostname: "{{parsed_event.message.log_hostname}}"
          source.ip: "{{parsed_event.message.source_ip}}"
          source.nat.ip: "{{parsed_event.message.source_nat_ip}}"
          user_agent.original: "{{parsed_event.message.user_agent_original}}"
