name: HAProxy
pipeline:
  - name: grok
    external:
      name: grok.match
      properties:
        output_field: message
        pattern: >-
          %{DATA}\[%{INT}\]: \[%{WORD}\] %{INT} %{GREEDYDATA:json_msg}

  - name: json
    filter: "{{grok.message.json_msg != null}}"
    external:
      name: json.parse-json
      properties:
        input_field: "{{grok.message.json_msg}}"

  - name: main_stage

stages:
  main_stage:
    actions:
      - set:
          action.name: "{{json.message.action}}"
          action.outcome: "{{json.message.status}}"
          destination.domain: "{{json.message.fqdn}}"
          http.request.method: "{{json.message.meth}}"
          http.response.bytes: "{{json.message.bytes}}"
          http.response.status_code: "{{json.message.code}}"
          os.name: "{{json.message.pn}}"
          os.version: "{{json.message.pv}}"
          source.ip: "{{json.message.ip}}"
          source.port: "{{json.message.port}}"
          url.path: "{{json.message.path}}"
          user_agent.original: "{{json.message.ua}}"
          event.kind: "access"

      - set:
          # legacy
          url.original: "{{final.destination.domain+final.url.path}}"
          http.version: "{{json.message.vers.split('/')[1]}}"
          destination.size_in_char: "{{final.destination.domain | length}}"
