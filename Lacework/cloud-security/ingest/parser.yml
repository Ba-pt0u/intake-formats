name: cloud-security
pipeline:
  - name: json_event
    external:
      name: json.parse-json
  - name: parsed_date
    external:
      name: date.parse
      input_field: "{{json_event.message.startTime}}"
      output_field: datetime
  - name: grok_extract
    external:
      name: grok.match
      properties:
        input_field: "{{json_event.message.alertInfo.description}}"
        output_field: message
        pattern: " For account: %{DATA:account_name}  : %{GREEDYDATA} %{INT:occurence} times  by user  %{DATA:user_name}    "
  - name: set_fields

stages:
  set_fields:
    actions:
      - set:
          "@timestamp": "{{parsed_date.datetime}}"
          event.category: >
            {%- if json_event.message.derivedFields.category == 'Composite' -%}
              ["intrusion_detection"]
            {%- elif json_event.message.derivedFields.sub_category == 'File' -%}
              ["file"]
            {%- elif json_event.message.derivedFields.sub_category == 'Registry' -%}
              ["registry"]
            {%- elif json_event.message.derivedFields.sub_category == 'Threat Intel' -%}
              ["network"]
            {%- else -%}
              ["configuration"]
            {%- endif -%}
          event.code: "{{json_event.message.alertType}}"
          event.end: "{{json_event.message.endTime}}"
          event.kind: "alert"
          event.reason: "{{json_event.message.alertName}}"
          event.start: "{{parsed_date.datetime}}"
          event.type: >
            {%- if json_event.message.derivedFields.sub_category == 'Registry' -%}
              {%- if "New" in json_event.message.alertType -%}
                ["creation"]
              {%- elif "Changed" in json_event.message.alertType -%}
                ["change"]
              {%- else -%}
                ["access"]
              {%- endif -%}
            {%- else -%}
              ["info"]
            {%- endif -%}
          lacework.alert.id: "{{json_event.message.alertId}}"
          lacework.alert.info.description: "{{json_event.message.alertInfo.description}}"
          lacework.alert.info.subject: "{{json_event.message.alertInfo.subject}}"
          lacework.alert.severity: "{{json_event.message.severity}}"
          lacework.alert.status: "{{json_event.message.status}}"
          observer.product: "Lacework Cloud Security"
          observer.vendor: "Lacework"
          rule.name: "{{json_event.message.entityMap.RulesTriggered}}"
          user.name: "{{json_event.message.entityMap.CT_User}}"
      - set:
          source.ip: "{{json_event.message.entityMap.SourceIpAddress}}"
        filter: "{{json_event.message.entityMap.SourceIpAddress|is_ipaddress}}"
      - set:
          lacework.account.name: "{{grok_extract.message.account_name}}"
          lacework.alert.sight: "{{grok_extract.message.occurence}}"
          user.name: "{{grok_extract.message.user_name}}"
        filter: "{{json_event.message.alertInfo.description in json_event.message.alertInfo.subject}}"
