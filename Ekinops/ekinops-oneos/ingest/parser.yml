name: ekinops-oneos
pipeline:
  - name: parse_message
    external:
      name: grok.match
      properties:
        pattern: "%{CONF_EVNTS}|%{LOG_IN}|%{LOG_OUT}|%{INTERFACE}|%{OTHERS}"
        custom_patterns:
          CONF_EVNTS: "%{DATA:time} localhost : #%{WORD:log_info}# %{DATA:conf_reason} by (%{DATA:origin}%{SPACE})?(user '%{WORD:user}' from %{DATA:data})? (on|at) %{GREEDYDATA:timestamp}"
          LOG_IN: "%{DATA:time} localhost : #%{WORD:log_info}# %{DATA:outcome} for (%{DATA:origin}%{SPACE})user '%{WORD:user}' from (Source IP Address '%{DATA:ip}' Local Port '%{WORD:port}'|%{DATA:data}) at %{GREEDYDATA:timestamp}"
          LOG_OUT: "%{DATA:time} localhost : #%{WORD:log_info}# Logged out user:%{DATA:log_user} from (a|the) %{WORD:origin} session (with client ip: %{DATA:ip}%{SPACE})?on %{GREEDYDATA:timestamp}"
          INTERFACE: "%{DATA:time} localhost : #%{WORD:log_info}# IF: %{DATA:intarface_name} is (%{DATA:data} |%{NOTSPACE})?%{WORD:reason}"
          OTHERS: "%{DATA:time} localhost : #%{WORD:log_info}# (%{WORD:provider})? \\[%{WORD:name}\\] %{GREEDYDATA:msg}"
  
  - name: parsed_date
    external:
      name: date.parse
      properties:
        input_field: "{{parse_message.message.time}}"
        output_field: datetime

  - name: set_ecs_fields
  - name: set_conf_fields
    filter: "{{ parse_message.message.conf_reason != None }}"
  - name: set_login_fields
    filter: "{{ parse_message.message.outcome != None}}"
  - name: set_logout_fields
    filter: "{{ parse_message.message.log_user != None}}"
  - name: set_interface_fields
    filter: "{{ parse_message.message.intarface_name != None}}"
  - name: set_other_fields
    filter: "{{ parse_message.message.msg != None }}"

stages:
  set_ecs_fields:
    actions:
      - set:
          "@timestamp": "{{parsed_date.datetime}}"

          observer.vendor: "Ekinops"
          observer.product: "OneOS"

          log.level: "{{parse_message.message.log_info}}"

  set_conf_fields:
    actions:
      - set:
          event.kind: "event"
          event.category: ["configuration"]
          event.type: ["change"]
          event.reason: "{{parse_message.message.conf_reason}}"

          user.name: "{{parse_message.message.user}}"

          ekinops.oneos.origin: "{{parse_message.message.origin}}"

  set_login_fields:
    actions:
      - set:
          event.kind: "event"
          event.category: ["authentication"]
          event.type: ["start"]
          event.outcome: "{{parse_message.message.outcome}}"

          user.name: "{{parse_message.message.user}}"
          source.ip: "{{parse_message.message.ip}}"

          ekinops.oneos.origin: "{{parse_message.message.origin}}"

  set_logout_fields:
    actions:
      - set:
          event.kind: "event"
          event.category: ["authentication"]
          event.type: ["end"]

          user.name: "{{parse_message.message.log_user}}"
          source.ip: "{{parse_message.message.ip }}"

          ekinops.oneos.origin: "{{parse_message.message.origin}}"

  set_interface_fields:
    actions:
      - set:
          event.kind: "event"
          event.category: ["host"]
          event.type: ["change"]
          event.action: "{{parse_message.message.reason}}"

          observer.ingress.interface.name: "{{parse_message.message.intarface_name}}"

  set_other_fields:
    actions:
      - set:
          event.kind: "event"
          event.category: ["process"]
          event.type: ["info"]
          event.provider: "{{parse_message.message.provider}}"
          event.reason: "{{parse_message.message.msg}}"


