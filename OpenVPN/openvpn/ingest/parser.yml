name: openvpn
pipeline:
  - name: pre_parsing
    external:
      name: grok.match
      properties:
        input_field: "original.message"
        output_field: pre_message
        pattern: '\s*%{DATA:date} %{DATA:time} %{DATA:raw_message}'

  - name: parsed_event
    external:
      name: grok.match
      properties:
        input_field: "{{pre_parsing.pre_message.raw_message}}"
        output_field: message
        pattern: "%{GATEWAY_1}|%{GATEWAY_2}|%{TUNNEL_1}|%{TUNNEL_2}|%{TUNNEL_3}|%{TUNNEL_4}|%{TUNNEL_5}|%{CLIENT_CONNECTION_1}|%{CLIENT_CONNECTION_2}|%{CLIENT_CONNECTION_3}|%{CLIENT_CONNECTION_4}|%{TLS_INFO}|%{CLIENT_INFO_1}|%{CLIENT_INFO_2}|%{CLIENT_INFO_3}|%{DEFAULT}"
        custom_patterns:
          GATEWAY_1: "%{DATA} IFACE=%{WORD:iface} HWADDR=%{MAC:hwadr}"
          GATEWAY_2: "net_%{DATA}: via %{IP} %{WORD} %{WORD:iface}"
          TUNNEL_1: "TUN/TAP %{WORD} %{WORD:observer_interface}%{DATA}"
          TUNNEL_2: "net_%{DATA}: %{IP:observer_ip} %{WORD} %{IP:peer_ip} %{WORD} %{WORD:observer_interface}"
          TUNNEL_3: "net_%{DATA}: %{IP}/%{NUMBER} %{WORD} %{IP:peer_ip} %{DATA}"
          TUNNEL_4: "net_%{DATA}: %{WORD} %{NUMBER} %{WORD} %{WORD:observer_interface}"
          TUNNEL_5: "net_%{DATA}_up: %{WORD} %{WORD:observer_interface} %{WORD}"
          CLIENT_CONNECTION_1: "%{DATA} %{IP:nat_ip} -> %{WORD:client_domain}/%{IP:client_ip}:%{NUMBER:client_port}"
          CLIENT_CONNECTION_2: "%{DATA} %{WORD:client_domain}/%{IP:client_ip}:%{NUMBER:client_port}: %{IP:nat_ip}"
          CLIENT_CONNECTION_3: "%{WORD:client_domain},%{IP:nat_ip},"
          CLIENT_CONNECTION_4: '%{IP:client_ip}:%{NUMBER:client_port} \[%{WORD:client_domain}\] %{DATA}'
          TLS_INFO: "%{IP:client_ip}:%{NUMBER:client_port} %{DATA}: TLS%{DATA:tls_version}, cipher %{DATA} %{DATA:tls_cipher}, %{DATA}"
          CLIENT_INFO_1: "%{IP:client_ip}:%{NUMBER:client_port} %{DATA:event_reason}"
          CLIENT_INFO_2: "%{DATA:event_reason}\\(\\), in='%{WORD:client_domain},%{IP:client_ip},'"
          CLIENT_INFO_3: "%{DATA:event_reason}: base=%{IP:client_ip} size=%{NUMBER}"
          DEFAULT: "%{DATA:event_reason}"

  - name: parse_date
    external:
      name: date.parse
      properties:
        input_field: "{{pre_parsing.pre_message.date}} {{pre_parsing.pre_message.time}}"
        output_field: datetime

  - name: set_common_fields

stages:
  set_common_fields:
    actions:
      - set:
          event.kind: "event"
          event.category: ["network"]
          event.type: ["info"]
          event.reason: "{{parsed_event.message.event_reason}}"
          "@timestamp": "{{parse_date.datetime}}"

          client.ip: "{{parsed_event.message.client_ip}}"
          client.port: "{{parsed_event.message.client_port}}"
          client.nat.ip: "{{parsed_event.message.nat_ip}}"
          client.domain: "{{parsed_event.message.client_domain}}"

          tls.version: "{{parsed_event.message.tls_version}}"
          tls.cipher: "{{parsed_event.message.tls_cipher}}"

          observer.ingress.interface.name: "{{parsed_event.message.observer_interface}}"
          observer.egress.interface.name: "{{parsed_event.message.iface}}"
          observer.mac: "{{parsed_event.message.hwadr}}"
          observer.ip: "{{parsed_event.message.observer_ip}}"
          openvpn.peer.ip: "{{parsed_event.message.peer_ip}}"
