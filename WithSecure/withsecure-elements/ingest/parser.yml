name: withsecure-elements
pipeline:
  - name: json_event
    external:
      name: json.parse-json
      properties:
        input_field: '{{original.message}}'
        output_field: message
  - name: read_event_date
    external:
      name: date.parse
      properties:
        input_field: '{{json_event.message.clientTimestamp}}'
        output_field: datetime
  - name: set_common_fields
  - name: set_malicious_file_fields
    filter: '{{json_event.message.engine == "manualScanning" or json_event.message.engine == "fileScaning" or json_event.message.engine == "deepGuard"}}'
  - name: deepguard_blocked_executable_file
    filter: '{{json_event.message.engine == "deepGuard"}}'
  - name: endpoint_detection_and_response
    filter: '{{json_event.message.engine == "edr"}}'
  - name: amsi
    filter: '{{json_event.message.engine == "AMSI"}}'
  - name: firewall_blocked_connection
    filter: '{{json_event.message.engine == "firewall"}}'
  - name: browsing_protection
    filter: '{{json_event.message.engine == "browsingProtection" or json_event.message.engine == "reputationBasedBrowsing" or json_event.message.engine == "webContentControl"}}'
  - name: connection_control
    filter: '{{json_event.message.engine == "connectionControl"}}'
stages:
  set_common_fields:
    actions:
      - set:
          '@timestamp': '{{read_event_date.datetime}}'
          event.kind: 'event'
          event.dataset: '{{json_event.message.engine}}'
          event.action: '{{json_event.message.action}}'
          event.reason: '{{json_event.message.details.reason}}'

          agent.id: '{{json_event.message.device.id}}'
          agent.name: '{{json_event.message.device.name}}'

          host.ip: '{{json_event.message.details.hostIpAddress}}'
          host.hostname: '{{json_event.message.device.name}}'

          agent.type: 'WithSecure Agent'
          organization.id: '{{json_event.message.organization.id}}'
          organization.name: '{{json_event.message.organization.name}}'

          process.executable: '{{json_event.message.details.creator}}'
          process.hash.sha1: '{{json_event.message.details.creatorSha1}}'
          process.command_line: '{{json_event.message.details.commandLine}}'
          process.name: '{{json_event.message.details.process}}'

          user.name: '{{json_event.message.details.userName}}'
          url.full: '{{json_event.message.details.url}}'

          file.hash.sha1: '{{json_event.message.details.sha1}}'
          file.path: '{{json_event.message.details.path}}'
          file.name: '{{json_event.message.details.path | basename}}'
          file.created: '{{json_event.message.details.created}}'
          file.mtime: '{{json_event.message.details.modified}}'
          file.size: '{{json_event.message.details.size}}'

          withsecure.severity: '{{json_event.message.severity}}'
          withsecure.infection.name: '{{json_event.message.details.infectionName}}'
          withsecure.infection.type: '{{json_event.message.details.infectionType}}'
          withsecure.quarantine.id: '{{json_event.message.details.quarantineId}}'
          withsecure.file.prevalence: '{{json_event.message.details.prevalence}}'
          withsecure.file.reputation: '{{json_event.message.details.reputation}}'
          withsecure.file.rarity: '{{json_event.message.details.rarity}}'
          withsecure.recommended_action: '{{json_event.message.details.recommandedAction}}'

  set_malicious_file_fields:
    actions:
      - set:
          event.category: [ 'malware' ]
          event.type: [ 'info' ]

  deepguard_blocked_executable_file:
    actions:
      - set:
          file.path: '{{json_event.message.details.filePath}}'
          file.name: '{{json_event.message.details.filePath | basename}}'
          event.reason: '{{json_event.message.details.name}}'

  endpoint_detection_and_response:
    actions:
      - set:
          event.category: [ 'intrusion_detection' ]
          event.type: [ 'info' ]
          withsecure.incident.id: '{{json_event.message.details.incidentId}}'
          withsecure.incident.readable_id: '{{json_event.message.details.readableIncidentId}}'
          withsecure.incident.categories: '{{json_event.message.details.categories.split(","}}'
          withsecure.incident.fingerprint: '{{json_event.message.details.fingerprint}}'

  amsi:
    actions:
      - set:
          event.category: [ 'malware' ]
          event.type: [ 'info' ]
          package.name: '{{json_event.message.details.appName}}'
          withsecure.amsi.content_name: '{{json_event.message.details.contentName}}'

  firewall_blocked_connection:
    actions:
      - set:
          event.category: [ 'network' ]
          event.type: [ 'denied' ]
          process.executable: '{{json_event.message.details.process}}'
          network.type: '{{json_event.message.details.ipProtocol}}'
          rule.name: '{{json_event.message.details.ruleName}}'
      - set:
          source.address: '{{json_event.message.details.localAddress}}'
          source.port: '{{json_event.message.details.localPort}}'
          destination.ip: '{{json_event.message.details.remoteAddress}}'
          destination.port: '{{json_event.message.details.remotePort}}'
          network.direction: 'outbound'
        filter: '{{json_event.message.details.ruleDirection == "outbound"}}'
      - set:
          destination.ip: '{{json_event.message.details.localAddress}}'
          destination.port: '{{json_event.message.details.localPort}}'
          source.ip: '{{json_event.message.details.remoteAddress}}'
          source.port: '{{json_event.message.details.remotePort}}'
          network.direction: 'inbound'
        filter: '{{json_event.message.details.ruleDirection == "inbound"}}'

  browsing_protection:
    actions:
      - set:
          event.category: [ 'web' ]
          event.type: [ 'denied' ]

  connection_control:
    actions:
      - set:
          event.category: [ 'network' ]
          event.type: [ 'denied' ]






  ## https://connect.withsecure.com/api-reference/security-events#get-Browsing-protection-harmful-or-suspicious-page-blocked

  #  real-time and manual scanning

  # deepguard

  # endpoint detection and response

  # Antimalware scan interface

  # firewall

  # browsing protectinon

  # web content control

  # connection control

  # web traffic scanning

  # application control

  # dataguard

  # device control

  # integrity check

  # tamper protection

  # system event log

  # server share protection

  # setting

  # xfence

