name: ocsf
pipeline:
  - name: parse_event
    external:
      name: json.parse-json
      properties:
        input_field: "{{original.message}}"
        output_field: message

  - name: parse_date_end_time_dt
    external:
      name: date.parse
      properties:
        input_field: "{{ parse_event.message.end_time_dt }}"
        output_field: datetime
    filter: "{{ parse_event.message.end_time_dt != None and parse_event.message.end_time_dt != '' }}"

  - name: parse_date_end_time
    external:
      name: date.parse
      properties:
        input_field: "{{ parse_event.message.end_time }}"
        output_field: datetime
    filter: "{{ parse_event.message.end_time != None and parse_event.message.end_time != '' }}"

  - name: parse_date_timestamp_from_time_dt
    external:
      name: date.parse
      properties:
        input_field: "{{ parse_event.message.time_dt }}"
        output_field: datetime
      filter: "{{ parse_event.message.time_dt != None and parse_event.message.time_dt != '' }}"

  - name: parse_date_timestamp_from_time
    external:
      name: date.parse
      properties:
        input_field: "{{ parse_event.message.time }}"
        output_field: datetime
    filter: "{{ parse_event.message.time != None and parse_event.message.time != '' }}"

  - name: parse_date_time_dt
    external:
      name: date.parse
      properties:
        input_field: "{{ parse_event.message.time_dt }}"
        output_field: datetime
    filter: "{{ parse_event.message.time_dt != None and parse_event.message.time_dt != '' }}"

  - name: parse_date_time
    external:
      name: date.parse
      properties:
        input_field: "{{ parse_event.message.time }}"
        output_field: datetime
    filter: "{{ parse_event.message.time != None and parse_event.message.time != '' }}"

  - name: parse_date_metadata_logged_time_dt
    external:
      name: date.parse
      properties:
        input_field: "{{ parse_event.message.metadata.logged_time_dt }}"
        output_field: datetime
    filter: "{{ parse_event.message.metadata.logged_time_dt != None and parse_event.message.metadata.logged_time_dt != '' }}"

  - name: parse_date_metadata_logged_time
    external:
      name: date.parse
      properties:
        input_field: "{{ parse_event.message.metadata.logged_time }}"
        output_field: datetime
    filter: "{{ parse_event.message.metadata.logged_time != None and parse_event.message.metadata.logged_time != '' }}"

  - name: parse_date_metadata_modified_time_dt
    external:
      name: date.parse
      properties:
        input_field: "{{ parse_event.message.metadata.modified_time_dt }}"
        output_field: datetime
    filter: "{{ parse_event.message.metadata.modified_time_dt != None and parse_event.message.metadata.modified_time_dt != '' }}"

  - name: parse_date_metadata_modified_time
    external:
      name: date.parse
      properties:
        input_field: "{{ parse_event.message.metadata.modified_time }}"
        output_field: datetime
    filter: "{{ parse_event.message.metadata.modified_time != None and parse_event.message.metadata.modified_time != '' }}"

  - name: parse_date_metadata_processed_time_dt
    external:
      name: date.parse
      properties:
        input_field: "{{ parse_event.message.metadata.processed_time_dt }}"
        output_field: datetime
    filter: "{{ parse_event.message.metadata.processed_time_dt != None and parse_event.message.metadata.processed_time_dt != '' }}"

  - name: parse_date_metadata_processed_time
    external:
      name: date.parse
      properties:
        input_field: "{{ parse_event.message.metadata.processed_time }}"
        output_field: datetime
    filter: "{{ parse_event.message.metadata.processed_time != None and parse_event.message.metadata.processed_time != '' }}"

  - name: parse_date_start_time_dt
    external:
      name: date.parse
      properties:
        input_field: "{{ parse_event.message.start_time_dt }}"
        output_field: datetime
    filter: "{{ parse_event.message.start_time_dt != None and parse_event.message.start_time_dt != '' }}"

  - name: parse_date_start_time
    external:
      name: date.parse
      properties:
        input_field: "{{ parse_event.message.start_time }}"
        output_field: datetime
    filter: "{{ parse_event.message.start_time != None and parse_event.message.start_time != '' }}"

  - name: set_event_kind
  - name: set_event_category
  - name: set_event_type
  - name: set_common_fields
  - name: set_fields

  - name: pipeline_object_actor
    filter:
      "{{ parse_event.message.class_uid != None and parse_event.message.class_uid
      in [1001,1002,1003,1004,1005,1006,1007,3001,3002,3003,3004,3005,4001,4002,4003,4004,4005,4006,4007,4008,4009,4010,4011,4012,5001,5002,6001,6002,6003,6004]
      and parse_event.message.actor != None }}"

  #  - name: pipeline_object_attack
  #    filter: '{{ parse_event.message.class_uid != None and parse_event.message.class_uid in [1001,1002,1003,1004,1005,1006,1007,2001,4001,4002,4003,4005,4006,4007,4008,4009,4011,4012] and parse_event.message.attacks != None }}'

  - name: pipeline_object_network_connection_info
    filter: "{{ parse_event.message.class_uid != None and parse_event.message.class_uid in [4001,4002,4003,4005,4006,4007,4008] and parse_event.message.connection_info != None }}"

  - name: pipeline_object_device
    filter: "{{ parse_event.message.class_uid != None and parse_event.message.class_uid in [1001,1002,1003,1004,1005,1006,1007,3001,3002,3003,3004,3005,4001,4002,4003,4004,4005,4006,4007,4008,4009,4011,4012,5001,5002,6001,6002,6004] and parse_event.message.device != None }}"

  - name: pipeline_object_http_request
    filter: "{{ parse_event.message.class_uid != None and parse_event.message.class_uid in [3001,3002,4002,6003,6004] and parse_event.message.http_request != None }}"

  - name: pipeline_object_malware
    filter: "{{ parse_event.message.class_uid != None and parse_event.message.class_uid in [2001,4001,4002,4003,4005,4006,4007,4008,4009,4011,4012] and parse_event.message.malware != None }}"

  - name: pipeline_object_network_endpoint
    filter: "{{ parse_event.message.class_uid != None and parse_event.message.class_uid in [3001,3002,3003,3005,4001,4002,4003,4004,4005,4006,4007,4008,4009,4010,6001,6003,6004] and parse_event.message.dst_endpoint != None or parse_event.message.src_endpoint != None }}"

  - name: pipeline_object_process
    filter: "{{ parse_event.message.class_uid != None and parse_event.message.class_uid in [1004,1007,2001] and parse_event.message.process != None }}"

  - name: pipeline_object_proxy
    filter: "{{ parse_event.message.class_uid != None and parse_event.message.class_uid in [4001,4002,4003,4005,4006,4007,4008] and parse_event.message.proxy != None }}"

  - name: pipeline_object_tls
    filter: "{{ parse_event.message.class_uid != None and parse_event.message.class_uid in [4001,4002,4003,4005,4006,4007,4008] and parse_event.message.tls != None }}"

  - name: pipeline_object_traffic
    filter: "{{ parse_event.message.class_uid != None and parse_event.message.class_uid in [4001,4002,4003,4005,4006,4007,4008] and parse_event.message.traffic != None }}"

  - name: pipeline_object_user
    filter: "{{ parse_event.message.class_uid != None and parse_event.message.class_uid in [3001,3002,3003,3005,3006] and parse_event.message.user != None }}"

  - name: pipeline_object_file
    filter: "{{ parse_event.message.class_uid != None and parse_event.message.class_uid in [1001,4006,4010,4011] }}"

  - name: pipeline_object_system_activity_helper
    filter: "{{ parse_event.message.class_uid != None and parse_event.message.class_uid in [1002,1005,1006] }}"

  - name: pipeline_category_system_activity
    filter: "{{ parse_event.message.category_uid != None and parse_event.message.category_uid == 1 }}"

  - name: pipeline_category_findings
    filter: "{{ parse_event.message.category_uid != None and parse_event.message.category_uid == 2 }}"

  - name: pipeline_category_identity_and_access_management
    filter: "{{ parse_event.message.category_uid != None and parse_event.message.category_uid == 3 }}"

  - name: pipeline_category_network_activity
    filter: "{{ parse_event.message.category_uid != None and parse_event.message.category_uid == 4 }}"

  - name: pipeline_category_application_activity
    filter: "{{ parse_event.message.category_uid != None and parse_event.message.category_uid == 6 }}"

  - name: pipeline_category_discovery
    filter: "{{ parse_event.message.category_uid != None and parse_event.message.category_uid == 5 }}"

stages:
  set_event_kind:
    actions:
      - set:
          event.kind: "event"
        filter: "{{parse_event.message.class_uid in [1001,1002,1003,1004,1005,1006,1007,3001,3002,3003,3005,3006,4001,4002,4003,4004,4005,4006,4007,4008,4009,4010,4011,4012,5001,5002,6001,6002,6003,6004]}}"

      - set:
          event.kind: "alert"
        filter: "{{parse_event.message.class_uid == 2001}}"

  set_event_category:
    actions:
      - set:
          event.category: ["malware"]
        filter: "{{parse_event.message.class_uid == 2001 and parse_event.message.malware != null}}"

      - set:
          event.category: ["vulnerability"]
        filter: "{{parse_event.message.class_uid == 2001 and parse_event.message.vulnerabilities != null}}"

      - set:
          event.category: ["iam"]
        filter: "{{parse_event.message.class_uid in [3001, 3005, 3006]}}"

      - set:
          event.category: ["authentication"]
        filter: "{{parse_event.message.class_uid == 3002}}"

      - set:
          event.category: ["session"]
        filter: "{{parse_event.message.class_uid == 3003}}"

      - set:
          event.category: ["network"]
        filter: "{{parse_event.message.class_uid in [4001, 4003, 4004, 4005, 4007, 4008, 4010]}}"

      - set:
          event.category: ["api"]
        filter: "{{parse_event.message.class_uid in [4002, 4006]}}"

      - set:
          event.category: ["file"]
        filter: "{{parse_event.message.class_uid in [1001, 4006, 4008, 4010, 4011]}}"

      - set:
          event.category: ["email"]
        filter: "{{parse_event.message.class_uid in [4009, 4011, 4012]}}"

      - set:
          event.category: ["web"]
        filter: "{{parse_event.message.class_uid in [6003, 6004]}}"

      - set:
          event.category: ["package"]
        filter: "{{parse_event.message.class_uid == 6002}}"

      - set:
          event.category: ["configuration"]
        filter: "{{parse_event.message.class_uid == 5002}}"

      - set:
          event.category: ["driver"]
        filter: "{{parse_event.message.class_uid in [1002, 1003]}}"

      - set:
          event.category: ["process"]
        filter: "{{parse_event.message.class_uid == 1007}}"

  set_event_type:
    actions:
      - set:
          event.type: ["info"]
        filter: "{{parse_event.message.class_uid in [1001,1002,1003,1007,2001,3001,3002,3003,3005,3006,4001,4002,4003,4004,4005,4006,4007,4008,4009,4010,4011,4012,5001,5002,6002,6003,6004]}}"

      - set:
          event.type: ["user"]
        filter: "{{parse_event.message.class_uid in [3001, 3006]}}"

      - set:
          event.type: ["group"]
        filter: "{{parse_event.message.class_uid in [3005]}}"

      - set:
          event.type: ["protocol"]
        filter: "{{parse_event.message.class_uid in [4003,4004,4005,4007,4008]}}"

      - set:
          event.type: ["creation"]
        filter: "{{parse_event.message.class_uid in [1001,3001,4006,5002] and parse_event.message.activity_name in ['Create','File Create','Log']}}"

      - set:
          event.type: ["access"]
        filter: "{{parse_event.message.class_uid in [1001,4006,4010,5002,6004] and parse_event.message.activity_name in ['Read','File Open','Preview','Open','Access Grant','Access Deny','Access Revoke','Access Error','Log']}}"

      - set:
          event.type: ["deletion"]
        filter: "{{parse_event.message.class_uid in [1001,3001,4010,6002] and parse_event.message.activity_name in ['Delete','Remove']}}"

      - set:
          event.type: ["start"]
        filter: "{{parse_event.message.class_uid in [1007,3002,4001,4007,6002] and parse_event.message.activity_name in ['Launch','Logon','Open','Start']}}"

      - set:
          event.type: ["end"]
        filter: "{{parse_event.message.class_uid in [1007,3002,4001,4007,6002] and parse_event.message.activity_name in ['Terminate','Logoff','Close','Stop']}}"

      - set:
          event.type: ["denied"]
        filter: "{{parse_event.message.class_uid in [4001, 4003, 4004, 4007] and parse_event.message.activity_name in ['Refuse','Decline']}}"

      - set:
          event.type: ["allowed"]
        filter: "{{parse_event.message.class_uid in [4004] and parse_event.message.activity_name in ['Ack']}}"

      - set:
          event.type: ["change"]
        filter: "{{parse_event.message.class_uid in [1001, 4006, 4010] and parse_event.message.activity_name in ['Update','File Supersede','File Overwrite','Update','Rename']}}"

      - set:
          event.type: ["connection"]
        filter: "{{parse_event.message.class_uid in [4005] and parse_event.message.activity_name in ['Connect Request','Connect Response']}}"

      - set:
          event.type: ["installation"]
        filter: "{{parse_event.message.class_uid in [6002] and parse_event.message.activity_name in ['Install']}}"

      - set:
          event.type: ["error"]
        filter: "{{parse_event.message.class_uid in [6004] and parse_event.message.activity_name in ['Access Error']}}"

  set_common_fields:
    actions:
      - set:
          cloud.account.id: "{{parse_event.message.cloud.account.uid}}"
          cloud.account.name: "{{parse_event.message.cloud.account.name}}"
          cloud.availability_zone: "{{parse_event.message.cloud.zone}}"
          cloud.project.id: "{{parse_event.message.cloud.project_uid}}"
          cloud.provider: "{{parse_event.message.cloud.provider}}"
          cloud.region: "{{parse_event.message.cloud.region}}"

          event.action: "{{parse_event.message.activity_name.lower().replace(': ', '-')}}"
          event.code: "{{parse_event.message.metadata.event_code}}"
          event.duration: "{{parse_event.message.duration * 1_000_000}}" # in nanoseconds
          # event.id: "{{parse_event.message.metadata.uid}}"  # @todo we can't assign this. use custom field?
          event.provider: "{{parse_event.message.metadata.log_provider}}"
          event.sequence: "{{parse_event.message.metadata.sequence}}"

          event.severity: "{{parse_event.message.severity_id}}"

      - set:
          event.provider: "{{parse_event.message.metadata.product.vendor_name}}"
        filter: "{{parse_event.message.metadata.log_provider == None}}"

      - set:
          event.end: "{{parse_date_end_time_dt.datetime}}"
        filter: "{{parse_date_end_time_dt.datetime != None}}"

      - set:
          event.end: "{{parse_date_end_time.datetime}}"
        filter: "{{parse_date_end_time.datetime != None}}"

      - set:
          event.start: "{{parse_date_start_time_dt.datetime}}"
        filter: "{{parse_date_start_time_dt.datetime != None}}"

      - set:
          event.start: "{{parse_date_start_time.datetime}}"
        filter: "{{parse_date_start_time.datetime != None}}"

      - translate:
        dictionary:
          0: "unknown"
          1: "success"
          2: "failure"
        mapping:
          parse_event.message.status_id: event.outcome

  set_fields:
    actions: []
      #- set:
          #ocsf: "{{parse_event.message}}"
          #process: "{{parse_event.message.process}}"

  pipeline_object_actor:
    actions:
      - set:
          container.id: '{{ parse_event.message.parse_event.message.actor.process.container.uid }}'
          container.image.name: '{{ parse_event.message.parse_event.message.actor.process.container.image.name }}'
      - set:
          container.image.tag:
            - '{{ parse_event.message.parse_event.message.actor.process.container.image.tag }}'
        filter: '{{ parse_event.message.actor.process.container.image.tag != None }}'
      - set:
          container.labels: '{{ parse_event.message.parse_event.message.actor.process.container.image.labels }}'
          orchestrator.type: '{{ parse_event.message.parse_event.message.actor.process.container.orchestrator }}'
          container.name: '{{ parse_event.message.parse_event.message.actor.process.container.name }}'
          container.runtime: '{{ parse_event.message.parse_event.message.actor.process.container.runtime }}'
          file.accessed: '{{ parse_event.message.parse_event.message.actor.process.file.accessed_time }}'
          file.created: '{{ parse_event.message.parse_event.message.actor.process.file.created_time }}'
          file.directory: '{{ parse_event.message.parse_event.message.actor.process.file.parent_folder }}'
          file.inode: '{{ parse_event.message.parse_event.message.actor.process.file.uid }}'
          file.mime_type: '{{ parse_event.message.parse_event.message.actor.process.file.mime_type }}'
          file.mtime: '{{ parse_event.message.parse_event.message.actor.process.file.modified_time }}'
          file.name: '{{ parse_event.message.parse_event.message.actor.process.file.name }}'
          file.owner: '{{ parse_event.message.parse_event.message.actor.process.file.owner.name }}'
          file.path: '{{ parse_event.message.parse_event.message.actor.process.file.path }}'
          file.size: '{{ parse_event.message.parse_event.message.actor.process.file.size }}'
          file.type: '{{ parse_event.message.parse_event.message.actor.process.file.type }}'
          file.uid: '{{ parse_event.message.parse_event.message.actor.process.file.owner.uid }}'
          file.x509.issuer.distinguished_name: '{{ parse_event.message.parse_event.message.actor.process.file.signature.certificate.issuer }}'
          file.x509.not_after: '{{ parse_event.message.parse_event.message.actor.process.file.signature.certificate.expiration_time }}'
          file.x509.serial_number: '{{ parse_event.message.parse_event.message.actor.process.file.signature.certificate.serial_number }}'
          file.x509.subject.distinguished_name: '{{ parse_event.message.parse_event.message.actor.process.file.signature.certificate.subject }}'
          file.x509.version_number: '{{ parse_event.message.parse_event.message.actor.process.file.signature.certificate.version }}'
          process.command_line: '{{ parse_event.message.parse_event.message.actor.process.cmd_line }}'
          process.end: '{{ parse_event.message.parse_event.message.actor.process.terminated_time }}'
      - set:
          process.group.id:
            - '{{ parse_event.message.parse_event.message.actor.process.egid }}'
        filter: '{{ parse_event.message.actor.process.egid != None }}'
      - set:
          process.group.id:
            - '{{ parse_event.message.parse_event.message.actor.process.group.uid }}'
        filter: '{{ parse_event.message.actor.process.group.uid != None }}'
      - set:
          process.group.name: '{{ parse_event.message.parse_event.message.actor.process.group.name }}'
          process.name: '{{ parse_event.message.parse_event.message.actor.process.name }}'
          process.pid: '{{ parse_event.message.parse_event.message.actor.process.pid }}'
          process.start: '{{ parse_event.message.parse_event.message.actor.process.created_time }}'
          process.thread.id: '{{ parse_event.message.parse_event.message.actor.process.tid }}'
          process.entity_id: '{{ parse_event.message.parse_event.message.actor.process.uid }}'
          process.user.domain: '{{ parse_event.message.parse_event.message.actor.process.user.domain }}'
          process.user.email: '{{ parse_event.message.parse_event.message.actor.process.user.email_addr }}'
          process.user.full_name: '{{ parse_event.message.parse_event.message.actor.process.user.full_name }}'
      - set:
          process.user.id:
            - '{{ parse_event.message.parse_event.message.actor.process.euid }}'
        filter: '{{ parse_event.message.actor.process.euid != None }}'
      - set:
          process.user.id:
            - '{{ parse_event.message.parse_event.message.actor.process.user.uid }}'
        filter: '{{ parse_event.message.actor.process.user.uid != None }}'
      - set:
          process.user.name: '{{ parse_event.message.parse_event.message.actor.process.user.name }}'
          user.domain: '{{ parse_event.message.parse_event.message.actor.user.domain }}'
          user.email: '{{ parse_event.message.parse_event.message.actor.user.email_addr }}'
          user.full_name: '{{ parse_event.message.parse_event.message.actor.user.full_name }}'
          user.id: '{{ parse_event.message.parse_event.message.actor.user.uid }}'
          user.name: '{{ parse_event.message.parse_event.message.actor.user.name }}'
          process.parent.command_line: '{{ parse_event.message.parse_event.message.actor.process.parent_process.cmd_line }}'
          process.parent.end: '{{ parse_event.message.parse_event.message.actor.process.parent_process.terminated_time }}'
      - set:
          process.parent.group.id:
            - '{{ parse_event.message.parse_event.message.actor.process.parent_process.egid }}'
        filter: '{{ parse_event.message.actor.process.parent_process.egid != None }}'
      - set:
          process.parent.group.id:
            - '{{ parse_event.message.parse_event.message.actor.process.parent_process.group.uid }}'
        filter: '{{ parse_event.message.actor.process.parent_process.group.uid != None }}'
      - set:
          process.parent.group.name: '{{ parse_event.message.parse_event.message.actor.process.parent_process.group.name }}'
          process.parent.name: '{{ parse_event.message.parse_event.message.actor.process.parent_process.name }}'
          process.parent.pid: '{{ parse_event.message.parse_event.message.actor.process.parent_process.pid }}'
          process.parent.start: '{{ parse_event.message.parse_event.message.actor.process.parent_process.created_time }}'
          process.parent.thread.id: '{{ parse_event.message.parse_event.message.actor.process.parent_process.tid }}'
          process.parent.entity_id: '{{ parse_event.message.parse_event.message.actor.process.parent_process.uid }}'
          process.parent.user.domain: '{{ parse_event.message.parse_event.message.actor.process.parent_process.user.domain }}'
          process.parent.user.email: '{{ parse_event.message.parse_event.message.actor.process.parent_process.user.email_addr }}'
          process.parent.user.full_name: '{{ parse_event.message.parse_event.message.actor.process.parent_process.user.full_name }}'
      - set:
          process.parent.user.id:
            - '{{ parse_event.message.parse_event.message.actor.process.parent_process.euid }}'
        filter: '{{ parse_event.message.actor.process.parent_process.euid != None }}'
      - set:
          process.parent.user.id:
            - '{{ parse_event.message.parse_event.message.actor.process.parent_process.user.uid }}'
        filter: '{{ parse_event.message.actor.process.parent_process.user.uid != None }}'
      - set:
          process.parent.user.name: '{{ parse_event.message.parse_event.message.actor.process.parent_process.user.name }}'

  pipeline_object_network_connection_info:
    actions:
      - set:
          network.iana_number: '{{ parse_event.message.parse_event.message.connection_info.protocol_num }}'
      - set:
          network.direction:
            - internal
        filter: '{{ parse_event.message.connection_info.boundary != None and parse_event.message.connection_info.boundary == ''Internal'' }}'
      - set:
          network.direction:
            - external
        filter: '{{ parse_event.message.connection_info.boundary != None and parse_event.message.connection_info.boundary == ''External'' }}'
      - set:
          network.direction:
            - inbound
        filter: '{{ parse_event.message.connection_info.direction != None and parse_event.message.connection_info.direction == ''Inbound'' }}'
      - set:
          network.direction:
            - outbound
        filter: '{{ parse_event.message.connection_info.direction != None and parse_event.message.connection_info.direction == ''Outbound'' }}'
      - set:
          network.direction:
            - unknown
        filter: '{{ parse_event.message.connection_info.direction != None and parse_event.message.connection_info.direction == ''Unknown'' or parse_event.message.connection_info.boundary != None and parse_event.message.connection_info.boundary == ''Unknown'' }}'
  pipeline_object_device:
    actions:
      - set:
          host.domain: '{{ parse_event.message.parse_event.message.device.domain }}'
          host.geo.city_name: '{{ parse_event.message.parse_event.message.device.location.city }}'
          host.geo.continent_name: '{{ parse_event.message.parse_event.message.device.location.continent }}'
          host.geo.country_iso_code: '{{ parse_event.message.parse_event.message.device.location.country }}'
          host.geo.location: '{{ parse_event.message.parse_event.message.device.location.coordinates }}'
          host.geo.name: '{{ parse_event.message.parse_event.message.device.location.desc }}'
          host.geo.postal_code: '{{ parse_event.message.parse_event.message.device.location.postal_code }}'
          host.geo.region_iso_code: '{{ parse_event.message.parse_event.message.device.location.region }}'
          host.hostname: '{{ parse_event.message.parse_event.message.device.hostname }}'
          host.id: '{{ parse_event.message.parse_event.message.device.uid }}'
      - set:
          host.ip:
            - '{{ parse_event.message.parse_event.message.device.ip }}'
        filter: '{{ parse_event.message.device.ip != None }}'
      - set:
          host.mac:
            - '{{ parse_event.message.parse_event.message.device.mac }}'
        filter: '{{ parse_event.message.device.mac != None }}'
      - set:
          host.os.name: '{{ parse_event.message.parse_event.message.device.os.name }}'
      - set:
          host.os.type: '{{ parse_event.message.parse_event.message.device.os.type }}'
        filter: '{{ parse_event.message.device.os.type != None and parse_event.message.device.os.type in [''Linux'',''Windows'',''Android'',''macOS'',''iOS''] }}'
      - set:
          host.os.version: '{{ parse_event.message.parse_event.message.device.os.build }}'
          host.risk.static_level: '{{ parse_event.message.parse_event.message.device.risk_level }}'
          host.risk.static_score: '{{ parse_event.message.parse_event.message.device.risk_score }}'
          host.type: '{{ parse_event.message.parse_event.message.device.type }}'
          network.vlan.id: '{{ parse_event.message.parse_event.message.device.vlan_uid }}'
  pipeline_object_http_request:
    actions:
      - set:
          http.request.id: '{{ parse_event.message.parse_event.message.http_request.uid }}'
          http.request.method: '{{ parse_event.message.parse_event.message.http_request.http_method }}'
          http.request.referrer: '{{ parse_event.message.parse_event.message.http_request.referrer }}'
          http.version: '{{ parse_event.message.parse_event.message.http_request.version }}'
          url.domain: '{{ parse_event.message.parse_event.message.http_request.url.hostname }}'
          url.original: '{{ parse_event.message.parse_event.message.http_request.url.url_string }}'
          url.path: '{{ parse_event.message.parse_event.message.http_request.url.path }}'
          url.port: '{{ parse_event.message.parse_event.message.http_request.url.port }}'
          url.query: '{{ parse_event.message.parse_event.message.http_request.url.query_string }}'
          url.scheme: '{{ parse_event.message.parse_event.message.http_request.url.scheme }}'
          url.subdomain: '{{ parse_event.message.parse_event.message.http_request.url.subdomain }}'
          user_agent.original: '{{ parse_event.message.parse_event.message.http_request.user_agent }}'
  pipeline_object_malware:
    actions: [ ]
  pipeline_object_network_endpoint:
    actions:
      - set:
          source.domain:
            - '{{ parse_event.message.parse_event.message.src_endpoint.domain }}'
        filter: '{{ parse_event.message.src_endpoint.domain != None }}'
      - set:
          source.geo.city_name: '{{ parse_event.message.parse_event.message.src_endpoint.location.city }}'
          source.geo.continent_name: '{{ parse_event.message.parse_event.message.src_endpoint.location.continent }}'
          source.geo.location: '{{ parse_event.message.parse_event.message.src_endpoint.location.coordinates }}'
          source.geo.country_iso_code: '{{ parse_event.message.parse_event.message.src_endpoint.location.country }}'
          source.geo.name: '{{ parse_event.message.parse_event.message.src_endpoint.location.desc }}'
          source.geo.postal_code: '{{ parse_event.message.parse_event.message.src_endpoint.location.postal_code }}'
          source.geo.region_iso_code: '{{ parse_event.message.parse_event.message.src_endpoint.location.region }}'
      - set:
          source.domain:
            - '{{ parse_event.message.parse_event.message.src_endpoint.hostname }}'
        filter: '{{ parse_event.message.src_endpoint.hostname != None }}'
      - set:
          source.ip: '{{ parse_event.message.parse_event.message.src_endpoint.ip }}'
          source.mac: '{{ parse_event.message.parse_event.message.src_endpoint.mac }}'
          source.port: '{{ parse_event.message.parse_event.message.src_endpoint.port }}'
      - set:
          network.application:
            - '{{ parse_event.message.parse_event.message.src_endpoint.svc_name }}'
        filter: '{{ parse_event.message.src_endpoint.svc_name != None }}'
      - set:
          destination.domain:
            - '{{ parse_event.message.parse_event.message.dst_endpoint.domain }}'
        filter: '{{ parse_event.message.dst_endpoint.domain != None }}'
      - set:
          destination.geo.city_name: '{{ parse_event.message.parse_event.message.dst_endpoint.location.city }}'
          destination.geo.continent_name: '{{ parse_event.message.parse_event.message.dst_endpoint.location.continent }}'
          destination.geo.location: '{{ parse_event.message.parse_event.message.dst_endpoint.location.coordinates }}'
          destination.geo.country_iso_code: '{{ parse_event.message.parse_event.message.dst_endpoint.location.country }}'
          destination.geo.name: '{{ parse_event.message.parse_event.message.dst_endpoint.location.desc }}'
          destination.geo.postal_code: '{{ parse_event.message.parse_event.message.dst_endpoint.location.postal_code }}'
          destination.geo.region_iso_code: '{{ parse_event.message.parse_event.message.dst_endpoint.location.region }}'
      - set:
          destination.domain:
            - '{{ parse_event.message.parse_event.message.dst_endpoint.hostname }}'
        filter: '{{ parse_event.message.dst_endpoint.hostname != None }}'
      - set:
          destination.ip: '{{ parse_event.message.parse_event.message.dst_endpoint.ip }}'
          destination.mac: '{{ parse_event.message.parse_event.message.dst_endpoint.mac }}'
          destination.port: '{{ parse_event.message.parse_event.message.dst_endpoint.port }}'
      - set:
          network.application:
            - '{{ parse_event.message.parse_event.message.dst_endpoint.svc_name }}'
        filter: '{{ parse_event.message.dst_endpoint.svc_name != None }}'
  pipeline_object_process:
    actions:
      - set:
          container.id: '{{ parse_event.message.parse_event.message.process.container.uid }}'
          container.image.name: '{{ parse_event.message.parse_event.message.process.container.image.name }}'
      - set:
          container.image.tag:
            - '{{ parse_event.message.parse_event.message.process.container.image.tag }}'
        filter: '{{ parse_event.message.process.container.image.tag != None }}'
      - set:
          container.labels: '{{ parse_event.message.parse_event.message.process.container.image.labels }}'
          orchestrator.type: '{{ parse_event.message.parse_event.message.process.container.orchestrator }}'
          container.name: '{{ parse_event.message.parse_event.message.process.container.name }}'
          container.runtime: '{{ parse_event.message.parse_event.message.process.container.runtime }}'
          file.accessed: '{{ parse_event.message.parse_event.message.process.file.accessed_time }}'
          file.created: '{{ parse_event.message.parse_event.message.process.file.created_time }}'
          file.directory: '{{ parse_event.message.parse_event.message.process.file.parent_folder }}'
          file.inode: '{{ parse_event.message.parse_event.message.process.file.uid }}'
          file.mime_type: '{{ parse_event.message.parse_event.message.process.file.mime_type }}'
          file.mtime: '{{ parse_event.message.parse_event.message.process.file.modified_time }}'
          file.name: '{{ parse_event.message.parse_event.message.process.file.name }}'
          file.owner: '{{ parse_event.message.parse_event.message.process.file.owner.name }}'
          file.path: '{{ parse_event.message.parse_event.message.process.file.path }}'
          file.size: '{{ parse_event.message.parse_event.message.process.file.size }}'
          file.type: '{{ parse_event.message.parse_event.message.process.file.type }}'
          file.uid: '{{ parse_event.message.parse_event.message.process.file.owner.uid }}'
          file.x509.issuer.distinguished_name: '{{ parse_event.message.parse_event.message.process.file.signature.certificate.issuer }}'
          file.x509.not_after: '{{ parse_event.message.parse_event.message.process.file.signature.certificate.expiration_time }}'
          file.x509.serial_number: '{{ parse_event.message.parse_event.message.process.file.signature.certificate.serial_number }}'
          file.x509.subject.distinguished_name: '{{ parse_event.message.parse_event.message.process.file.signature.certificate.subject }}'
          file.x509.version_number: '{{ parse_event.message.parse_event.message.process.file.signature.certificate.version }}'
          process.command_line: '{{ parse_event.message.parse_event.message.process.cmd_line }}'
          process.end: '{{ parse_event.message.parse_event.message.process.terminated_time }}'
      - set:
          process.group.id:
            - '{{ parse_event.message.parse_event.message.process.egid }}'
        filter: '{{ parse_event.message.process.egid != None }}'
      - set:
          process.group.id:
            - '{{ parse_event.message.parse_event.message.process.group.uid }}'
        filter: '{{ parse_event.message.process.group.uid != None }}'
      - set:
          process.group.name: '{{ parse_event.message.parse_event.message.process.group.name }}'
          process.name: '{{ parse_event.message.parse_event.message.process.name }}'
          process.pid: '{{ parse_event.message.parse_event.message.process.pid }}'
          process.start: '{{ parse_event.message.parse_event.message.process.created_time }}'
          process.thread.id: '{{ parse_event.message.parse_event.message.process.tid }}'
          process.entity_id: '{{ parse_event.message.parse_event.message.process.uid }}'
          process.user.domain: '{{ parse_event.message.parse_event.message.process.user.domain }}'
          process.user.email: '{{ parse_event.message.parse_event.message.process.user.email_addr }}'
          process.user.full_name: '{{ parse_event.message.parse_event.message.process.user.full_name }}'
      - set:
          process.user.id:
            - '{{ parse_event.message.parse_event.message.process.euid }}'
        filter: '{{ parse_event.message.process.euid != None }}'
      - set:
          process.user.id:
            - '{{ parse_event.message.parse_event.message.process.user.uid }}'
        filter: '{{ parse_event.message.process.user.uid != None }}'
      - set:
          process.user.name: '{{ parse_event.message.parse_event.message.process.user.name }}'
          process.parent.command_line: '{{ parse_event.message.parse_event.message.process.parent_process.cmd_line }}'
          process.parent.end: '{{ parse_event.message.parse_event.message.process.parent_process.terminated_time }}'
      - set:
          process.parent.group.id:
            - '{{ parse_event.message.parse_event.message.process.parent_process.egid }}'
        filter: '{{ parse_event.message.process.parent_process.egid != None }}'
      - set:
          process.parent.group.id:
            - '{{ parse_event.message.parse_event.message.process.parent_process.group.uid }}'
        filter: '{{ parse_event.message.process.parent_process.group.uid != None }}'
      - set:
          process.parent.group.name: '{{ parse_event.message.parse_event.message.process.parent_process.group.name }}'
          process.parent.name: '{{ parse_event.message.parse_event.message.process.parent_process.name }}'
          process.parent.pid: '{{ parse_event.message.parse_event.message.process.parent_process.pid }}'
          process.parent.start: '{{ parse_event.message.parse_event.message.process.parent_process.created_time }}'
          process.parent.thread.id: '{{ parse_event.message.parse_event.message.process.parent_process.tid }}'
          process.parent.entity_id: '{{ parse_event.message.parse_event.message.process.parent_process.uid }}'
          process.parent.user.domain: '{{ parse_event.message.parse_event.message.process.parent_process.user.domain }}'
          process.parent.user.email: '{{ parse_event.message.parse_event.message.process.parent_process.user.email_addr }}'
          process.parent.user.full_name: '{{ parse_event.message.parse_event.message.process.parent_process.user.full_name }}'
      - set:
          process.parent.user.id:
            - '{{ parse_event.message.parse_event.message.process.parent_process.euid }}'
        filter: '{{ parse_event.message.process.parent_process.euid != None }}'
      - set:
          process.parent.user.id:
            - '{{ parse_event.message.parse_event.message.process.parent_process.user.uid }}'
        filter: '{{ parse_event.message.process.parent_process.user.uid != None }}'
      - set:
          process.parent.user.name: '{{ parse_event.message.parse_event.message.process.parent_process.user.name }}'
  pipeline_object_proxy:
    actions: [ ]
  pipeline_object_tls:
    actions:
      - set:
          tls.cipher: '{{ parse_event.message.parse_event.message.tls.cipher }}'
          tls.client.ja3: '{{ parse_event.message.parse_event.message.tls.ja3_hash.value }}'
          tls.client.server_name: '{{ parse_event.message.parse_event.message.tls.sni }}'
          tls.client.x509.issuer.distinguished_name: '{{ parse_event.message.parse_event.message.tls.certificate.issuer }}'
          tls.client.x509.not_after: '{{ parse_event.message.parse_event.message.tls.certificate.expiration_time }}'
          tls.client.x509.serial_number: '{{ parse_event.message.parse_event.message.tls.certificate.serial_number }}'
          tls.client.x509.subject.distinguished_name: '{{ parse_event.message.parse_event.message.tls.certificate.subject }}'
          tls.client.x509.version_number: '{{ parse_event.message.parse_event.message.tls.certificate.version }}'
          tls.server.ja3s: '{{ parse_event.message.parse_event.message.tls.ja3s_hash.value }}'
          tls.version: '{{ parse_event.message.parse_event.message.tls.version }}'
  pipeline_object_traffic:
    actions:
      - set:
          destination.bytes: '{{ parse_event.message.parse_event.message.traffic.bytes_in }}'
          source.bytes: '{{ parse_event.message.parse_event.message.traffic.bytes_out }}'
          destination.packets: '{{ parse_event.message.parse_event.message.traffic.packets_in }}'
          source.packets: '{{ parse_event.message.parse_event.message.traffic.packets_out }}'
          network.bytes: '{{ parse_event.message.parse_event.message.traffic.bytes }}'
          network.packets: '{{ parse_event.message.parse_event.message.traffic.packets }}'
  pipeline_object_user:
    actions:
      - set:
          user.target.domain: '{{ parse_event.message.parse_event.message.user.domain }}'
          user.target.email: '{{ parse_event.message.parse_event.message.user.email_addr }}'
          user.target.full_name: '{{ parse_event.message.parse_event.message.user.full_name }}'
          user.target.id: '{{ parse_event.message.parse_event.message.user.uid }}'
          user.target.name: '{{ parse_event.message.parse_event.message.user.name }}'
  pipeline_object_file:
    actions:
      - set:
          file.accessed: '{{ parse_event.message.parse_event.message.file.accessed_time }}'
          file.created: '{{ parse_event.message.parse_event.message.file.created_time }}'
          file.directory: '{{ parse_event.message.parse_event.message.file.parent_folder }}'
          file.inode: '{{ parse_event.message.parse_event.message.file.uid }}'
          file.mime_type: '{{ parse_event.message.parse_event.message.file.mime_type }}'
          file.mtime: '{{ parse_event.message.parse_event.message.file.modified_time }}'
          file.name: '{{ parse_event.message.parse_event.message.file.name }}'
          file.owner: '{{ parse_event.message.parse_event.message.file.owner.name }}'
          file.path: '{{ parse_event.message.parse_event.message.file.path }}'
          file.size: '{{ parse_event.message.parse_event.message.file.size }}'
          file.type: '{{ parse_event.message.parse_event.message.file.type }}'
          file.uid: '{{ parse_event.message.parse_event.message.file.owner.uid }}'
          file.x509.issuer.distinguished_name: '{{ parse_event.message.parse_event.message.file.signature.certificate.issuer }}'
          file.x509.not_after: '{{ parse_event.message.parse_event.message.file.signature.certificate.expiration_time }}'
          file.x509.serial_number: '{{ parse_event.message.parse_event.message.file.signature.certificate.serial_number }}'
          file.x509.subject.distinguished_name: '{{ parse_event.message.parse_event.message.file.signature.certificate.subject }}'
          file.x509.version_number: '{{ parse_event.message.parse_event.message.file.signature.certificate.version }}'
  pipeline_object_system_activity_helper:
    actions:
      - set:
          file.accessed: '{{ parse_event.message.parse_event.message.job.file.accessed_time }}'
          file.created: '{{ parse_event.message.parse_event.message.job.file.created_time }}'
          file.directory: '{{ parse_event.message.parse_event.message.job.file.parent_folder }}'
          file.inode: '{{ parse_event.message.parse_event.message.job.file.uid }}'
          file.mime_type: '{{ parse_event.message.parse_event.message.job.file.mime_type }}'
          file.mtime: '{{ parse_event.message.parse_event.message.job.file.modified_time }}'
          file.name: '{{ parse_event.message.parse_event.message.job.file.name }}'
          file.owner: '{{ parse_event.message.parse_event.message.job.file.owner.name }}'
          file.path: '{{ parse_event.message.parse_event.message.job.file.path }}'
          file.size: '{{ parse_event.message.parse_event.message.job.file.size }}'
          file.type: '{{ parse_event.message.parse_event.message.job.file.type }}'
          file.uid: '{{ parse_event.message.parse_event.message.job.file.owner.uid }}'
          file.x509.issuer.distinguished_name: '{{ parse_event.message.parse_event.message.job.file.signature.certificate.issuer }}'
          file.x509.not_after: '{{ parse_event.message.parse_event.message.job.file.signature.certificate.expiration_time }}'
          file.x509.serial_number: '{{ parse_event.message.parse_event.message.job.file.signature.certificate.serial_number }}'
          file.x509.subject.distinguished_name: '{{ parse_event.message.parse_event.message.job.file.signature.certificate.subject }}'
          file.x509.version_number: '{{ parse_event.message.parse_event.message.job.file.signature.certificate.version }}'
  pipeline_category_system_activity:
    actions:
      - set:
          user.target.domain: '{{ parse_event.message.parse_event.message.job.user.domain }}'
          user.target.email: '{{ parse_event.message.parse_event.message.job.user.email_addr }}'
          user.target.full_name: '{{ parse_event.message.parse_event.message.job.user.full_name }}'
          user.target.id: '{{ parse_event.message.parse_event.message.job.user.uid }}'
          user.target.name: '{{ parse_event.message.parse_event.message.job.user.name }}'
          process.exit_code: '{{ parse_event.message.parse_event.message.exit_code }}'
  pipeline_category_findings:
    actions:
      - set:
          event.reference: '{{ parse_event.message.parse_event.message.finding.src_url }}'
          event.risk_score: '{{ parse_event.message.parse_event.message.risk_score }}'
  pipeline_category_identity_and_access_management:
    actions:
      - set:
          user.changes.domain: '{{ parse_event.message.parse_event.message.user_result.domain }}'
          user.changes.email: '{{ parse_event.message.parse_event.message.user_result.email_addr }}'
          user.changes.full_name: '{{ parse_event.message.parse_event.message.user_result.full_name }}'
          user.changes.id: '{{ parse_event.message.parse_event.message.user_result.uid }}'
          user.changes.name: '{{ parse_event.message.parse_event.message.user_result.name }}'
          service.name: '{{ parse_event.message.parse_event.message.service.name }}'
          service.id: '{{ parse_event.message.parse_event.message.service.uid }}'
          service.version: '{{ parse_event.message.parse_event.message.service.version }}'
          group.name: '{{ parse_event.message.parse_event.message.group.name }}'
          group.id: '{{ parse_event.message.parse_event.message.group.uid }}'
  pipeline_category_network_activity:
    actions:
      - set:
          dns.question.name: '{{ parse_event.message.parse_event.message.query.hostname }}'
      - set:
          dns.id:
            - '{{ parse_event.message.parse_event.message.query.packet_uid }}'
        filter: '{{ parse_event.message.query.packet_uid != None }}'
      - set:
          dns.question.class:
            - '{{ parse_event.message.parse_event.message.query.class }}'
        filter: '{{ parse_event.message.query.class != None }}'
      - set:
          dns.question.type:
            - '{{ parse_event.message.parse_event.message.query.type }}'
        filter: '{{ parse_event.message.query.type != None }}'
      - set:
          dns.response_code: '{{ parse_event.message.parse_event.message.rcode }}'
          http.response.status_code: '{{ parse_event.message.parse_event.message.response.code }}'
          http.response.body.bytes: '{{ parse_event.message.parse_event.message.http_response.length }}'
          http.response.body.content: '{{ parse_event.message.parse_event.message.http_response.message }}'
          observer.hostname: '{{ parse_event.message.parse_event.message.relay.hostname }}'
          observer.ip: '{{ parse_event.message.parse_event.message.relay.ip }}'
          observer.mac: '{{ parse_event.message.parse_event.message.relay.mac }}'
          observer.name: '{{ parse_event.message.parse_event.message.relay.name }}'
          observer.type: '{{ parse_event.message.parse_event.message.relay.type }}'
          http.request.id: '{{ parse_event.message.parse_event.message.request.uid }}'
          tls.server.certificate_chain: '{{ parse_event.message.parse_event.message.certificate_chain }}'
          email.cc.address: '{{ parse_event.message.parse_event.message.email.cc }}'
          email.local_id: '{{ parse_event.message.parse_event.message.email.uid }}'
      - set:
          email.from.address:
            - '{{ parse_event.message.parse_event.message.email.from }}'
        filter: '{{ parse_event.message.email.from != None }}'
      - set:
          email.message_id: '{{ parse_event.message.parse_event.message.email.message_uid }}'
      - set:
          email.reply_to.address:
            - '{{ parse_event.message.parse_event.message.email.reply_to }}'
        filter: '{{ parse_event.message.email.reply_to != None }}'
      - set:
          email.subject: '{{ parse_event.message.parse_event.message.email.subject }}'
          email.to.address: '{{ parse_event.message.parse_event.message.email.to }}'
          email.local_id: '{{ parse_event.message.parse_event.message.email_uid }}'
          url.query: '{{ parse_event.message.parse_event.message.url.query_string }}'
          url.domain: '{{ parse_event.message.parse_event.message.url.hostname }}'
          url.path: '{{ parse_event.message.parse_event.message.url.path }}'
          url.port: '{{ parse_event.message.parse_event.message.url.port }}'
          url.scheme: '{{ parse_event.message.parse_event.message.url.scheme }}'
          url.subdomain: '{{ parse_event.message.parse_event.message.url.subdomain }}'
          url.original: '{{ parse_event.message.parse_event.message.url.url_string }}'
      - set:
          email.attachments.file.size: '{{ parse_event.message.parse_event.message.file.size }}'
        filter: '{{ parse_event.message.file.size != None and and }}'
      - set:
          email.attachments.file.name: '{{ parse_event.message.parse_event.message.file.name }}'
        filter: '{{ parse_event.message.file.name != None and and }}'
  pipeline_category_application_activity:
    actions:
      - set:
          http.response.status_code: '{{ parse_event.message.parse_event.message.http_response.code }}'
          http.response.body.bytes: '{{ parse_event.message.parse_event.message.http_response.length }}'
          http.response.body.content: '{{ parse_event.message.parse_event.message.http_response.message }}'
  pipeline_category_discovery:
    actions:
      - set:
          rule.category: '{{ parse_event.message.parse_event.message.cis_benchmark_result.rule.category }}'
          rule.description: '{{ parse_event.message.parse_event.message.cis_benchmark_result.rule.desc }}'
          rule.name: '{{ parse_event.message.parse_event.message.cis_benchmark_result.rule.name }}'
          rule.uuid: '{{ parse_event.message.parse_event.message.cis_benchmark_result.rule.uid }}'
          rule.version: '{{ parse_event.message.parse_event.message.cis_benchmark_result.rule.version }}'
